{"message":"this import is redundant","code":{"code":"clippy::single_component_path_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":106,"byte_end":121,"line_start":4,"line_end":4,"column_start":1,"column_end":16,"is_primary":true,"text":[{"text":"use serde_json;","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::single_component_path_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove it entirely","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":106,"byte_end":121,"line_start":4,"line_end":4,"column_start":1,"column_end":16,"is_primary":true,"text":[{"text":"use serde_json;","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this import is redundant\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:4:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse serde_json;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove it entirely\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_component_path_imports\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::single_component_path_imports)]` on by default\u001b[0m\n\n"}
{"message":"unnecessary `if let` since only the `Ok` variant of the iterator element is used","code":{"code":"clippy::manual_flatten","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":829,"byte_end":2215,"line_start":31,"line_end":61,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        for entry in entries {","highlight_start":9,"highlight_end":31},{"text":"            if let Ok(entry) = entry {","highlight_start":1,"highlight_end":39},{"text":"                let sub_path = entry.path();","highlight_start":1,"highlight_end":45},{"text":"                if sub_path.is_file(){","highlight_start":1,"highlight_end":39},{"text":"                    //incrementam numarul de fisiere","highlight_start":1,"highlight_end":53},{"text":"                    *file_count+=1;","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    //colectam informatii despre extensii","highlight_start":1,"highlight_end":58},{"text":"                    if let Some(ext) = sub_path.extension() {","highlight_start":1,"highlight_end":62},{"text":"                        let ext_str = ext.to_string_lossy().to_lowercase();","highlight_start":1,"highlight_end":76},{"text":"                        let count = extension_count.entry(ext_str.into()).or_insert(0);","highlight_start":1,"highlight_end":88},{"text":"                        *count += 1;","highlight_start":1,"highlight_end":37},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    //obtinem informatii despre fisier nume si marime","highlight_start":1,"highlight_end":70},{"text":"                    if let Ok(metadata) = fs::metadata(&sub_path){","highlight_start":1,"highlight_end":67},{"text":"                        let file_info = FileInfo {","highlight_start":1,"highlight_end":51},{"text":"                            file_name: sub_path.file_name().unwrap().to_string_lossy().to_string(),","highlight_start":1,"highlight_end":100},{"text":"                            file_size: metadata.len()","highlight_start":1,"highlight_end":54},{"text":"                        };","highlight_start":1,"highlight_end":27},{"text":"                        files_info.push(file_info);","highlight_start":1,"highlight_end":52},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                } else if sub_path.is_dir() {","highlight_start":1,"highlight_end":46},{"text":"                    //incrementam numarul de foldere","highlight_start":1,"highlight_end":53},{"text":"                    *folder_count += 1;","highlight_start":1,"highlight_end":40},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    //apelam recursiv functia pe path ul subfolderelor","highlight_start":1,"highlight_end":71},{"text":"                    count_files_and_folders(&sub_path, file_count, folder_count, extension_count, files_info);","highlight_start":1,"highlight_end":111},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"...and remove the `if let` statement in the for loop","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":864,"byte_end":2205,"line_start":32,"line_end":60,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"            if let Ok(entry) = entry {","highlight_start":13,"highlight_end":39},{"text":"                let sub_path = entry.path();","highlight_start":1,"highlight_end":45},{"text":"                if sub_path.is_file(){","highlight_start":1,"highlight_end":39},{"text":"                    //incrementam numarul de fisiere","highlight_start":1,"highlight_end":53},{"text":"                    *file_count+=1;","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    //colectam informatii despre extensii","highlight_start":1,"highlight_end":58},{"text":"                    if let Some(ext) = sub_path.extension() {","highlight_start":1,"highlight_end":62},{"text":"                        let ext_str = ext.to_string_lossy().to_lowercase();","highlight_start":1,"highlight_end":76},{"text":"                        let count = extension_count.entry(ext_str.into()).or_insert(0);","highlight_start":1,"highlight_end":88},{"text":"                        *count += 1;","highlight_start":1,"highlight_end":37},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    //obtinem informatii despre fisier nume si marime","highlight_start":1,"highlight_end":70},{"text":"                    if let Ok(metadata) = fs::metadata(&sub_path){","highlight_start":1,"highlight_end":67},{"text":"                        let file_info = FileInfo {","highlight_start":1,"highlight_end":51},{"text":"                            file_name: sub_path.file_name().unwrap().to_string_lossy().to_string(),","highlight_start":1,"highlight_end":100},{"text":"                            file_size: metadata.len()","highlight_start":1,"highlight_end":54},{"text":"                        };","highlight_start":1,"highlight_end":27},{"text":"                        files_info.push(file_info);","highlight_start":1,"highlight_end":52},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                } else if sub_path.is_dir() {","highlight_start":1,"highlight_end":46},{"text":"                    //incrementam numarul de foldere","highlight_start":1,"highlight_end":53},{"text":"                    *folder_count += 1;","highlight_start":1,"highlight_end":40},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    //apelam recursiv functia pe path ul subfolderelor","highlight_start":1,"highlight_end":71},{"text":"                    count_files_and_folders(&sub_path, file_count, folder_count, extension_count, files_info);","highlight_start":1,"highlight_end":111},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_flatten","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::manual_flatten)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":842,"byte_end":849,"line_start":31,"line_end":31,"column_start":22,"column_end":29,"is_primary":true,"text":[{"text":"        for entry in entries {","highlight_start":22,"highlight_end":29}],"label":null,"suggested_replacement":"entries.flatten()","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unnecessary `if let` since only the `Ok` variant of the iterator element is used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:31:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        for entry in entries {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: try: `entries.flatten()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m_________|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if let Ok(entry) = entry {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let sub_path = entry.path();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if sub_path.is_file(){\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: ...and remove the `if let` statement in the for loop\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:32:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if let Ok(entry) = entry {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let sub_path = entry.path();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                if sub_path.is_file(){\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    //incrementam numarul de fisiere\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|_____________^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_flatten\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::manual_flatten)]` on by default\u001b[0m\n\n"}
{"message":"useless conversion to the same type: `std::string::String`","code":{"code":"clippy::useless_conversion","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":1319,"byte_end":1333,"line_start":41,"line_end":41,"column_start":59,"column_end":73,"is_primary":true,"text":[{"text":"                        let count = extension_count.entry(ext_str.into()).or_insert(0);","highlight_start":59,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::useless_conversion)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider removing `.into()`","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":1319,"byte_end":1333,"line_start":41,"line_end":41,"column_start":59,"column_end":73,"is_primary":true,"text":[{"text":"                        let count = extension_count.entry(ext_str.into()).or_insert(0);","highlight_start":59,"highlight_end":73}],"label":null,"suggested_replacement":"ext_str","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: useless conversion to the same type: `std::string::String`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:41:59\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        let count = extension_count.entry(ext_str.into()).or_insert(0);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: consider removing `.into()`: `ext_str`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::useless_conversion)]` on by default\u001b[0m\n\n"}
{"message":"3 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 3 warnings emitted\u001b[0m\n\n"}
